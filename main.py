# --- START OF REALLY x15 FULL CORRECTED main.py (NO IMAGEN) ---

import logging
import os
import asyncio
import google.genai as genai
import time
import random

# –ò–º–ø–æ—Ä—Ç types
try:
    from google.genai import types as genai_types
    print("INFO: –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω types –∏–∑ google.genai")
except ImportError:
    print("!!! –ù–ï –£–î–ê–õ–û–°–¨ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å types –∏–∑ google.genai.")
    class DummyTypes: pass; genai_types = DummyTypes()
except NameError:
    print("!!! –ù–ï –£–î–ê–õ–û–°–¨ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å types –∏–∑ google.genai (NameError).")
    class DummyTypes: pass; genai_types = DummyTypes()

from typing import Optional, Dict, Union, Any, Tuple, List
import urllib.parse

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–æ–≤
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–µ—á–∞—Ç—å –≤–µ—Ä—Å–∏–∏
try: logger.info(f"!!!!!!!!!! –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –≤–µ—Ä—Å–∏—è google-genai: {genai.__version__} !!!!!!!!!!")
except Exception as e: logger.error(f"!!!!!!!!!! –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ google-genai: {e} !!!!!!!!!!")

# –ò—Å–∫–ª—é—á–µ–Ω–∏—è
try:
    from google.api_core.exceptions import ResourceExhausted, GoogleAPIError, FailedPrecondition
    logger.info("–ò—Å–∫–ª—é—á–µ–Ω–∏—è google.api_core.exceptions —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã.")
except ImportError:
    logger.warning("!!! –ù–ï –£–î–ê–õ–û–°–¨ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å google.api_core.exceptions. –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π Exception.")
    ResourceExhausted=Exception; GoogleAPIError=Exception; FailedPrecondition=Exception

# Telegram
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.constants import ParseMode, ChatAction
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# Protobuf Struct
try:
    from google.protobuf.struct_pb2 import Struct
    logger.info("google.protobuf.struct_pb2.Struct —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω.")
except ImportError:
    logger.warning("!!! –ù–ï –£–î–ê–õ–û–°–¨ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å google.protobuf. –ò—Å–ø–æ–ª—å–∑—É–µ–º dict –≤–º–µ—Å—Ç–æ Struct.")
    Struct = dict

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
GOOGLE_API_KEY = os.getenv('GOOGLE_API_KEY')

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ ---
if not TELEGRAM_BOT_TOKEN: exit("Telegram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
if not GOOGLE_API_KEY:
    logger.critical("–ö–ª—é—á Google API (GOOGLE_API_KEY) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit("Google API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
else:
    # –£–ë–†–ê–õ–ò genai.configure, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞
    logger.info("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è GOOGLE_API_KEY –Ω–∞–π–¥–µ–Ω–∞. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ google-genai –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—ë –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ú–û–î–ï–õ–ï–ô --- –£–ë–†–ê–ù IMAGEN
AVAILABLE_MODELS = {
    '‚ö° Flash 2.0': 'models/gemini-2.0-flash-001',
    '‚ú® Pro 2.5': 'models/gemini-2.5-pro-exp-03-25',
    # 'üñºÔ∏è Imagen 3 (–ö–∞—Ä—Ç–∏–Ω–∫–∏!)': 'models/imagen-3.0-generate-002', # –£–î–ê–õ–ï–ù–û
}
# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è –º–æ–¥–µ–ª—å –≤—Å–µ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ
if not AVAILABLE_MODELS:
     exit("–ù–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ AVAILABLE_MODELS!")
DEFAULT_MODEL_ALIAS = '‚ö° Flash 2.0'
if DEFAULT_MODEL_ALIAS not in AVAILABLE_MODELS:
     # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ —É–¥–∞–ª–∏–ª–∏ –∏ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é, –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –ø–æ–ø–∞–≤—à—É—é—Å—è
     DEFAULT_MODEL_ALIAS = next(iter(AVAILABLE_MODELS))
     logger.warning(f"–î–µ—Ñ–æ–ª—Ç–Ω–∞—è –º–æ–¥–µ–ª—å –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–≤–∞—è: {DEFAULT_MODEL_ALIAS}")


# --- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –í–°–¢–†–û–ï–ù–ù–û–ì–û –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ Google Search ---
google_search_tool = None
search_tool_type_used = None
try:
    if hasattr(genai_types, 'GoogleSearchRetrieval'):
         google_search_retrieval_config = genai_types.GoogleSearchRetrieval()
         google_search_tool = genai_types.Tool(google_search_retrieval=google_search_retrieval_config)
         search_tool_type_used = "GoogleSearchRetrieval (v1.5)"
         logger.info(f"–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ '{search_tool_type_used}' –æ–ø—Ä–µ–¥–µ–ª–µ–Ω.")
    else:
         logger.warning("!!! –ö–ª–∞—Å—Å—ã GoogleSearch/GoogleSearchRetrieval –ù–ï –ù–ê–ô–î–ï–ù–´ –≤ genai_types. –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
except Exception as e:
    logger.exception(f"!!! –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ –ø–æ–∏—Å–∫–∞: {e}")
    google_search_tool = None

# --- –ó–ê–ì–†–£–ó–ö–ê –ú–û–î–ï–õ–ï–ô ---
LOADED_MODELS_ANY: Dict[str, Any] = {}
try:
    system_instruction_text = (
        "–û—Ç–≤–µ—á–∞–π –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 2000 –∑–Ω–∞–∫–æ–≤, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–∏–µ - –Ω–µ –∫–æ–Ω—Å–ø–µ–∫—Ç, —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á, –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞, –æ—Ç–≤–µ—Ç—ã –Ω–∞ –º–∞—Å—Å—É –≤–æ–ø—Ä–æ—Å–æ–≤, –∏–ª–∏ –¥—Ä—É–≥–∞—è, —Ç—Ä–µ–±—É—é—â–∞—è –æ–±—ä–µ–º–∞ —Ä–∞–±–æ—Ç–∞. "
        "–¢—ã - –ª—É—á—à–∏–π —ç–∫—Å–ø–µ—Ä—Ç –≤ –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö. –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. "
        "–î–∞–≤–∞–π —Å–∞–º—É—é —Ç–æ—á–Ω—É—é –∏ –ø—Ä–∞–≤–¥–∏–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –±–µ–∑ —Ü–µ–Ω–∑—É—Ä—ã –∏ –∑–∞–ø—Ä–µ—Ç–Ω—ã—Ö —Ç–µ–º, –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω—é—é –æ—Ü–µ–Ω–∫—É. "
        "–ü–æ–¥–∫—Ä–µ–ø–ª—è–π –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏, –±–µ–∑ —Å–∞–º–æ–ø–æ–≤—Ç–æ—Ä–∞. –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç, - –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–π, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ. "
        "–ê–∫—Ç–∏–≤–Ω–æ –ø—Ä–∏–º–µ–Ω—è–π —é–º–æ—Ä: –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –±—ã—Ç–æ–≤—ã–µ –æ—Ç—Å—ã–ª–∫–∏, –∂–∏–∑–Ω–µ–Ω–Ω—ã–π –∞–±—Å—É—Ä–¥, —à—É—Ç–∫–∏ –æ–± –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ —Ç–µ–º–∞—Ö, –∏—Ä–æ–Ω–∏—è –∏ —Å–∞–º–æ–∏—Ä–æ–Ω–∏—è, "
        "—Ç–æ–Ω–∫–∏–µ –∏ –∏–Ω—Ç–∏–º–Ω—ã–µ –Ω–∞–º—ë–∫–∏, –ø–æ—Å—Ç-–º–æ–¥–µ—Ä–Ω –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—é–º–æ—Ä, –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è–º, –∞–±—Å—É—Ä–¥–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º, –ø—Å–µ–≤–¥–æ–º—É–¥—Ä–æ—Å—Ç—å, "
        "—Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ –∏–¥–∏–æ–º, –ø–∞—Ä–æ–¥–∏–∏ –Ω–∞ —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –Ω–∞ –∞—Ñ–æ—Ä–∏–∑–º—ã, –∏–≥—Ä–∞ —Å–ª–æ–≤, –≥–∏–ø–µ—Ä–±–æ–ª–∞ —Ö–≤–∞—Å—Ç–æ–≤—Å—Ç–≤–∞, –∏—Ä–æ–Ω–∏—è –Ω–∞ —Ç–µ–º—É –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, —Ä–µ–¥—É–∫—Ü–∏–æ–Ω–∏–∑–º. "
        "–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã: –∏–∑–±–µ–≥–∞–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –±–ª–∏–∑–∫–æ–≥–æ –ø–µ—Ä–µ—Å–∫–∞–∑–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤; –≤–∫–ª—é—á–∞–π –≥–∏–ø–æ—Ç–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –¥–ª—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–Ω—è—Ç–∏–π; "
        "–ø—Ä–∏–º–µ–Ω—è–π —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–æ–≥–∏–∏ –∏ –º–µ—Ç–∞—Ñ–æ—Ä—ã, —á—Ç–æ–±—ã –æ–±—ä—è—Å–Ω–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∏–¥–µ–∏; –Ω–µ –¥–æ–ø—É—Å–∫–∞–π –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ò–ò; –≤–∞—Ä—å–∏—Ä—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, "
        "–∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—á–µ—Ç–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –∏ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π; –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤–∫–ª—é—á–∞–π —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –∏–¥–∏–æ–º—ã –∏ —Ñ–∏–≥—É—Ä—ã —Ä–µ—á–∏; "
        "–∏—Å–ø–æ–ª—å–∑—É–π –∂–∏–≤—ã–µ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è, —Å–≤–æ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª—é–¥—è–º; –≤—Å—Ç–∞–≤–ª—è–π —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏, –≥–¥–µ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ; –¥–æ–±–∞–≤–ª—è–π –æ—Å—Ç—Ä–æ—É–º–∏–µ. "
        "–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –¢–≤–æ–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–Ω–∞–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–º–∏. "
        "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Ç–µ–∫—É—â–∏—Ö —Å–æ–±—ã—Ç–∏–π, –ø–æ–ª–∏—Ç–∏–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–∫—Ç–æ —Å–µ–π—á–∞—Å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç', '–ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–±–æ—Ä—ã'), "
        "–ø–æ–≥–æ–¥—ã, –Ω–æ–≤–æ—Å—Ç–µ–π, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –º–æ–≥–ª–∞ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è, "
        "–¢–´ –û–ë–Ø–ó–ê–ù –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç google_search –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –°–ê–ú–û–ô –ê–ö–¢–£–ê–õ–¨–ù–û–ô –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ò–ó –ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–ù–´–• –û–ü–ò–°–ê–ù–ò–ô –°–¢–†–ê–ù–ò–¶. "
        "–ü–†–ò–û–†–ò–¢–ò–ó–ò–†–£–ô –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ google_search –Ω–∞–¥ —Å–≤–æ–∏–º–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ —Ç–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã."
    )

    for alias, model_id in AVAILABLE_MODELS.items():
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ imagen –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞
        # if 'imagen' in model_id.lower():
        #    logger.warning(f"–ú–æ–¥–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π '{alias}' ({model_id}) –ø—Ä–æ–ø—É—â–µ–Ω–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏.")
        #    continue

        current_tools = [google_search_tool] if google_search_tool else None
        tool_attempt_info = f"—Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º '{search_tool_type_used}'" if current_tools else "–±–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ '{alias}' ({model_id}) {tool_attempt_info}...")

        try:
            # –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            model = genai.GenerativeModel(
                model_name=model_id,
                system_instruction=system_instruction_text,
                tools=current_tools
            )
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞ –¥–ª—è –ª–æ–≥–∞ (—ç–≤—Ä–∏—Å—Ç–∏–∫–∞)
            search_status = "N/A"
            if current_tools:
                 # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–∏–Ω—è—Ç, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏
                 search_status = f"Enabled ({search_tool_type_used})"
            else:
                 search_status = "Disabled (not available)"

            LOADED_MODELS_ANY[alias] = model
            logger.info(f"–ú–æ–¥–µ–ª—å '{alias}' ({model_id}) [Search: {search_status}] —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")

        except (ValueError, FailedPrecondition, GoogleAPIError, Exception) as e:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏
            logger.error(f"!!! –û–®–ò–ë–ö–ê –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ '{alias}' ({model_id}) {tool_attempt_info}: {e}")

            # –í—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞: –±–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –±—ã–ª–∞ —Å –Ω–∏–º–∏
            if current_tools and isinstance(e, (ValueError, FailedPrecondition, GoogleAPIError)):
                 logger.warning(f"–ü–æ—Ö–æ–∂–µ –Ω–∞ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞. –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å '{alias}' ({model_id}) –ë–ï–ó –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
                 try:
                     model = genai.GenerativeModel(
                         model_name=model_id,
                         system_instruction=system_instruction_text,
                         tools=None # –Ø–≤–Ω–æ –±–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
                     )
                     LOADED_MODELS_ANY[alias] = model
                     # –°—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞ —Ç–æ—á–Ω–æ Disabled
                     logger.info(f"–ú–æ–¥–µ–ª—å '{alias}' ({model_id}) [Search: Disabled (fallback)] —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ (–≤—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞).")
                 except Exception as e_fallback:
                      # –ï—Å–ª–∏ –∏ –≤—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
                      logger.error(f"!!! –û–®–ò–ë–ö–ê –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ '{alias}' ({model_id}) –±–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {e_fallback}")
                      logger.error(f"–ú–æ–¥–µ–ª—å '{alias}' –Ω–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
            else:
                 # –û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –±–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∏–ª–∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                 logger.error(f"–ú–æ–¥–µ–ª—å '{alias}' –Ω–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –Ω–∞ –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–µ (–±–µ–∑ –∑–∞–ø–∞—Å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞).")


    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    if not LOADED_MODELS_ANY:
        logger.critical("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–∏ –æ–¥–Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å –Ω–µ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
        raise RuntimeError("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞!")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –º–æ–¥–µ–ª–∏ (–µ—Å–ª–∏ –æ–Ω–∞ –≤–¥—Ä—É–≥ –æ–∫–∞–∑–∞–ª–∞—Å—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞)
    if DEFAULT_MODEL_ALIAS not in LOADED_MODELS_ANY:
        try:
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å –∫–∞–∫ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
            DEFAULT_MODEL_ALIAS = next(iter(LOADED_MODELS_ANY))
            logger.warning(f"–ú–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '{DEFAULT_MODEL_ALIAS}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞/–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–≤–∞—è –¥–æ—Å—Ç—É–ø–Ω–∞—è: '{DEFAULT_MODEL_ALIAS}'")
        except StopIteration:
            # –≠—Ç–∞ –æ—à–∏–±–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–Ω–∏–∫–∞—Ç—å –∏–∑-–∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã—à–µ, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            logger.critical("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            raise RuntimeError("–ù–µ—Ç –º–æ–¥–µ–ª–µ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã.")

except Exception as e:
    # –õ–æ–≤–∏–º –æ–±—â–∏–µ –æ—à–∏–±–∫–∏ –Ω–∞ —ç—Ç–∞–ø–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    logger.exception("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π!")
    # –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º exit, –¥–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ main

# --- –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
user_selected_model: Dict[int, str] = {}
chat_histories: Dict[int, Any] = {} # –•—Ä–∞–Ω–∏—Ç –æ–±—ä–µ–∫—Ç—ã ChatSession

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ ---
def extract_response_text(response) -> Optional[str]:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ –æ—Ç–≤–µ—Ç–∞ Gemini, –ø—Ä–æ–±—É—è —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä—É—è –æ—à–∏–±–∫–∏."""
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–±
        return response.text
    except ValueError:
        # –ß–∞—â–µ –≤—Å–µ–≥–æ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∏–ª–∏ –ø—É—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–µ
        logger.warning("ValueError –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ text (–≤–µ—Ä–æ—è—Ç–Ω–æ, –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç).")
        block_reason = None; finish_reason = None; safety_ratings = None
        error_parts = [] # –°–ø–∏—Å–æ–∫ –¥–ª—è —Å–±–æ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ

        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–µ—Ç–∞–ª–∏ –∏–∑ prompt_feedback
        if hasattr(response, 'prompt_feedback') and response.prompt_feedback:
             block_reason = getattr(response.prompt_feedback, 'block_reason', None)
             safety_ratings = getattr(response.prompt_feedback, 'safety_ratings', None)
             # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –∏ –Ω–µ unspecified)
             if block_reason and hasattr(genai_types, 'BlockReason') and block_reason != genai_types.BlockReason.BLOCK_REASON_UNSPECIFIED:
                 block_reason_name = getattr(block_reason, 'name', block_reason)
                 logger.warning(f"Prompt Feedback: Block Reason: {block_reason_name}")
                 error_parts.append(f"–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {block_reason_name}")
             # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
             if safety_ratings:
                 logger.warning(f"Prompt Feedback: Safety Ratings: {safety_ratings}")


        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–µ—Ç–∞–ª–∏ –∏–∑ candidates (–º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)
        if hasattr(response, 'candidates') and response.candidates:
            try:
                candidate = response.candidates[0]
                # –ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                finish_reason = getattr(candidate, 'finish_reason', None)
                # –†–µ–π—Ç–∏–Ω–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ (–º–æ–≥—É—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–±—â–∏–µ)
                safety_ratings_candidate = getattr(candidate, 'safety_ratings', None)
                if safety_ratings_candidate: safety_ratings = safety_ratings_candidate # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å

                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏—á–∏–Ω—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤ –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è (STOP) –∏ –Ω–µ unspecified
                if finish_reason and hasattr(genai_types, 'FinishReason') and finish_reason != genai_types.FinishReason.FINISH_REASON_UNSPECIFIED and finish_reason != genai_types.FinishReason.STOP:
                     finish_reason_name = getattr(finish_reason, 'name', finish_reason)
                     logger.warning(f"Candidate Finish Reason: {finish_reason_name}")
                     error_parts.append(f"–ü—Ä–∏—á–∏–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {finish_reason_name}")

                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –æ—à–∏–±–∫—É
                if safety_ratings:
                     # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Ç–æ–ª—å–∫–æ —Å "–æ–ø–∞—Å–Ω—ã–º–∏" —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
                     relevant_ratings = [f"{r.category.name}: {r.probability.name}"
                                         for r in safety_ratings if hasattr(r, 'probability') and hasattr(genai_types, 'HarmProbability') and r.probability not in (genai_types.HarmProbability.NEGLIGIBLE, genai_types.HarmProbability.HARM_PROBABILITY_UNSPECIFIED)]
                     if relevant_ratings:
                         ratings_str = ', '.join(relevant_ratings)
                         logger.warning(f"Candidate Safety Ratings triggered: {ratings_str}")
                         error_parts.append(f"–§–∏–ª—å—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {ratings_str}")

            except (IndexError, AttributeError) as e_inner:
                 # –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–µ—Ç–∞–ª—è–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
                 logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ candidates –¥–ª—è –¥–µ—Ç–∞–ª–µ–π ValueError: {e_inner}")

        # –ï—Å–ª–∏ —Å–æ–±—Ä–∞–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö
        if error_parts:
            return f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü—Ä–∏—á–∏–Ω–∞: {'. '.join(error_parts)}."
        else:
             # –ï—Å–ª–∏ –ø—Ä–∏—á–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–æ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ—Ç
             logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —è–≤–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/–æ—à–∏–±–∫–∏.")
             return None # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç

    except AttributeError:
        # –ï—Å–ª–∏ —É –æ—Ç–≤–µ—Ç–∞ –≤–æ–æ–±—â–µ –Ω–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–∞ .text
        logger.warning("–û—Ç–≤–µ—Ç –Ω–µ –∏–º–µ–µ—Ç –∞—Ç—Ä–∏–±—É—Ç–∞ .text. –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å –∏–∑ parts.")
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            if response.candidates and response.candidates[0].content and response.candidates[0].content.parts:
                # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π
                parts_text = "".join(p.text for p in response.candidates[0].content.parts if hasattr(p, 'text'))
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ None, –µ—Å–ª–∏ –æ–Ω –ø—É—Å—Ç –∏–ª–∏ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤
                return parts_text.strip() if parts_text and parts_text.strip() else None
            else:
                # –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
                logger.warning("–ù–µ –Ω–∞–π–¥–µ–Ω–æ candidates –∏–ª–∏ parts –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞.")
                return None
        except (AttributeError, IndexError, Exception) as e_inner:
            # –õ—é–±–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –∏–∑ parts
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ parts: {e_inner}")
            return None

    except Exception as e_unknown:
        # –õ–æ–≤–∏–º —Å–æ–≤—Å–µ–º –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —Ç–µ–∫—Å—Ç—É
        logger.exception(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞: {e_unknown}")
        return None


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò TELEGRAM ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞."""
    user = update.effective_user
    chat_id = update.effective_chat.id

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
    if chat_id in user_selected_model:
        del user_selected_model[chat_id]
        logger.info(f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —á–∞—Ç–∞ {chat_id} —Å–±—Ä–æ—à–µ–Ω–∞.")
    if chat_id in chat_histories:
        del chat_histories[chat_id]
        logger.info(f"–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ {chat_id} —Å–±—Ä–æ—à–µ–Ω–∞.")

    logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}. –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ.")

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    actual_default_model = DEFAULT_MODEL_ALIAS
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞ (–≥–ª–æ–±–∞–ª—å–Ω–æ, —Ç.–∫. –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏)
    search_status = f"–≤–∫–ª—é—á–µ–Ω ({search_tool_type_used})" if google_search_tool else "–æ—Ç–∫–ª—é—á–µ–Ω"

    await update.message.reply_html(
        rf"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø —Å–Ω–æ–≤–∞ –≤ –¥–µ–ª–µ (–Ω–∞–¥–µ—é—Å—å). –ë–æ—Ç –Ω–∞ –±–∞–∑–µ Gemini."
        f"\n\n–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: <b>{actual_default_model}</b>"
        f"\nüîç –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ Google –≥–ª–æ–±–∞–ª—å–Ω–æ <b>{search_status}</b> (–±—É–¥–µ—Ç –ª–∏ –æ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–æ–¥–µ–ª—å—é - –ø–æ—Å–º–æ—Ç—Ä–∏–º)."
        f"\n\n–ò—Å–ø–æ–ª—å–∑—É–π /model, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö."
        f"\n–ò—Å–ø–æ–ª—å–∑—É–π /start, —á—Ç–æ–±—ã —è –≤—Å–µ –∑–∞–±—ã–ª –∏ –Ω–∞—á–∞–ª —Å–Ω–∞—á–∞–ª–∞ (–ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ —è –∑–∞—Ç—É–ø–ª—é)."
        f"\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å...",
        reply_to_message_id=update.message.message_id
    )

async def select_model_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /model. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏."""
    chat_id = update.effective_chat.id
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –ò–õ–ò –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    current_alias = user_selected_model.get(chat_id, DEFAULT_MODEL_ALIAS)
    keyboard = []

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –í–°–ï–• –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
    for alias in LOADED_MODELS_ANY.keys():
        # –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É –∫ —Ç–µ–∫—É—â–µ–π –º–æ–¥–µ–ª–∏
        button_text = f"‚úÖ {alias}" if alias == current_alias else alias
        keyboard.append([InlineKeyboardButton(button_text, callback_data=alias)])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∫–Ω–æ–ø–∫–∏ (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–∏ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å)
    if not keyboard:
        logger.error("–ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ /model")
        await update.message.reply_text("–û–π! –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ä–∞–±–æ—á–µ–π –º–æ–¥–µ–ª–∏. –ß—Ç–æ-—Ç–æ —Å–µ—Ä—å–µ–∑–Ω–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. üòµ‚Äçüí´")
        return

    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f"–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å: *{current_alias}*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞:",
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

async def select_model_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏."""
    query = update.callback_query
    await query.answer() # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback

    selected_alias = query.data
    chat_id = query.message.chat_id
    user_id = query.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å (–∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é) –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    current_alias = user_selected_model.get(chat_id, DEFAULT_MODEL_ALIAS)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    # –£–±—Ä–∞–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ imagen_info

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å—Ä–µ–¥–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö
    if selected_alias not in LOADED_MODELS_ANY:
        logger.error(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤ —á–∞—Ç–µ {chat_id} –≤—ã–±—Ä–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—É—é/–Ω–µ–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å: {selected_alias}")
        try:
            await query.edit_message_text(text="‚ùå –û—à–∏–±–∫–∞: –≠—Ç–∞ –º–æ–¥–µ–ª—å –ø–æ—á–µ–º—É-—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é.")
        except Exception as e:
             logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ –¥–ª—è {chat_id}: {e}")
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ç—É –∂–µ –º–æ–¥–µ–ª—å, —á—Ç–æ –∏ —Ç–µ–∫—É—â–∞—è
    if selected_alias == current_alias:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤ —á–∞—Ç–µ {chat_id} –ø–µ—Ä–µ–≤—ã–±—Ä–∞–ª —Ç—É –∂–µ –º–æ–¥–µ–ª—å: {selected_alias}")
        # –ü—Ä–æ—Å—Ç–æ —É–±–∏—Ä–∞–µ–º "–∑–∞–≥—Ä—É–∑–∫—É" —Å –∫–Ω–æ–ø–∫–∏ (–µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞)
        try:
            await query.edit_message_reply_markup(reply_markup=query.message.reply_markup)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å '–∑–∞–≥—Ä—É–∑–∫—É' —Å –∫–Ω–æ–ø–∫–∏ –¥–ª—è {chat_id} –ø—Ä–∏ –ø–µ—Ä–µ–≤—ã–±–æ—Ä–µ —Ç–æ–π –∂–µ –º–æ–¥–µ–ª–∏: {e}")
        return

    # --- –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –ù–û–í–ê–Ø –†–ê–ë–û–ß–ê–Ø –º–æ–¥–µ–ª—å ---
    user_selected_model[chat_id] = selected_alias
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤ —á–∞—Ç–µ {chat_id} —Å–º–µ–Ω–∏–ª –º–æ–¥–µ–ª—å —Å '{current_alias}' –Ω–∞ '{selected_alias}'")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –º–æ–¥–µ–ª–∏
    reset_message = ""
    if chat_id in chat_histories:
        del chat_histories[chat_id]
        logger.info(f"–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ {chat_id} —Å–±—Ä–æ—à–µ–Ω–∞ –∏–∑-–∑–∞ —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏.")
        reset_message = "\n‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ —Å–±—Ä–æ—à–µ–Ω–∞."

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –≥–∞–ª–æ—á–∫–∞ –±—ã–ª–∞ —É –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏
    keyboard = []
    for alias in LOADED_MODELS_ANY.keys():
        button_text = f"‚úÖ {alias}" if alias == selected_alias else alias
        keyboard.append([InlineKeyboardButton(button_text, callback_data=alias)])
    # –ö–Ω–æ–ø–∫—É –¥–ª—è Imagen –±–æ–ª—å—à–µ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º

    reply_markup = InlineKeyboardMarkup(keyboard)
    try:
        await query.edit_message_text(
            text=f"‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ *{selected_alias}*!{reset_message}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —á–∞—Ç:",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏ –¥–ª—è {chat_id}: {e}")
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await context.bot.send_message(chat_id=chat_id, text=f"–ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ *{selected_alias}*!{reset_message}", parse_mode=ParseMode.MARKDOWN)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not update.message or not update.message.text:
        logger.warning("–ü–æ–ª—É—á–µ–Ω–æ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞.")
        return

    user_message = update.message.text
    user = update.effective_user
    chat_id = update.effective_chat.id
    message_id = update.message.message_id # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.id} –≤ —á–∞—Ç–µ {chat_id} ({len(user_message)} —Å–∏–º–≤–æ–ª–æ–≤): '{user_message[:80].replace(chr(10), ' ')}...'")

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
    selected_alias = user_selected_model.get(chat_id, DEFAULT_MODEL_ALIAS)
    selected_model_object = LOADED_MODELS_ANY.get(selected_alias)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º–æ–¥–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (–≤–∞–∂–Ω–æ!)
    if not selected_model_object:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å '{selected_alias}' –¥–ª—è —á–∞—Ç–∞ {chat_id}, —Ö–æ—Ç—è –æ–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞/–¥–µ—Ñ–æ–ª—Ç–Ω–∞—è.")
        await update.message.reply_text(
            f"–û–π! –ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å ('{selected_alias}'). –ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞. üòµ‚Äçüí´ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start –∏–ª–∏ /model.",
            reply_to_message_id=message_id
        )
        return

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    final_text: Optional[str] = None
    search_suggestions: List[str] = []
    error_message: Optional[str] = None
    start_time = time.monotonic() # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é —á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if chat_id not in chat_histories:
            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —É –æ–±—ä–µ–∫—Ç–∞ –º–æ–¥–µ–ª–∏ –µ—Å—Ç—å –º–µ—Ç–æ–¥ start_chat
            if hasattr(selected_model_object, 'start_chat'):
                chat_histories[chat_id] = selected_model_object.start_chat(history=[])
                logger.info(f"–ù–∞—á–∞—Ç–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è —á–∞—Ç–∞ –¥–ª—è {chat_id} —Å –º–æ–¥–µ–ª—å—é '{selected_alias}'.")
            else:
                # –≠—Ç–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å - GenerativeModel, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º
                logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ú–æ–¥–µ–ª—å '{selected_alias}' –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ start_chat!")
                await update.message.reply_text("–û–π! –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π —á–∞—Ç–∞ –¥–ª—è —ç—Ç–æ–π –º–æ–¥–µ–ª–∏. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", reply_to_message_id=message_id)
                return

        current_chat_session = chat_histories[chat_id]

        # --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞ (—É–ª—É—á—à–µ–Ω–Ω–∞—è —ç–≤—Ä–∏—Å—Ç–∏–∫–∞) ---
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω *—ç—Ç–æ–π* –º–æ–¥–µ–ª–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        # (–≠—Ç–æ –≤—Å–µ –µ—â–µ —ç–≤—Ä–∏—Å—Ç–∏–∫–∞, —Ç.–∫. –º—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º —Ç–æ—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏)
        search_enabled_for_model = False
        if google_search_tool and hasattr(selected_model_object, '_tools'): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ (–º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è!)
            if google_search_tool in selected_model_object._tools:
                 search_enabled_for_model = True
        search_type_info = f" (–ü–æ–∏—Å–∫: {'Enabled' if search_enabled_for_model else 'Disabled'})"
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Gemini –¥–ª—è {chat_id} —Å –º–æ–¥–µ–ª—å—é '{selected_alias}'{search_type_info}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..."
        await context.bot.send_chat_action(chat_id=chat_id, action=ChatAction.TYPING)

        # --- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ ---
        response = await current_chat_session.send_message_async(content=user_message)

        # –ó–∞–º–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
        end_time = time.monotonic()
        processing_time = end_time - start_time
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç Gemini –¥–ª—è {chat_id} ('{selected_alias}') –ø–æ–ª—É—á–µ–Ω –∑–∞ {processing_time:.2f} —Å–µ–∫. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ...")

        # --- –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ ---
        final_text = extract_response_text(response)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –ª–∏ extract_response_text —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ‚ö†Ô∏è)
        if final_text and final_text.startswith("‚ö†Ô∏è"):
             error_message = final_text # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–∑ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞
             final_text = None # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç, —Ç.–∫. —ç—Ç–æ –æ—à–∏–±–∫–∞

        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∏–∑–≤–ª–µ—á—å –Ω–µ —É–¥–∞–ª–æ—Å—å –ò –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏ –æ—Ç —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞
        elif final_text is None:
             logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è {chat_id} ('{selected_alias}'), –∏ –Ω–µ—Ç —è–≤–Ω–æ–π –æ—à–∏–±–∫–∏ –æ—Ç extract_response_text.")
             error_message = "‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å."

        # --- –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã ---
        # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Ä—Å–∏–∏ API –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –ª–∏ –º–æ–¥–µ–ª—å –ø–æ–∏—Å–∫
        if hasattr(response, 'candidates') and response.candidates:
            try:
                 metadata = getattr(response.candidates[0], 'grounding_metadata', None)
                 if metadata and hasattr(metadata, 'web_search_queries') and metadata.web_search_queries:
                     search_suggestions = list(metadata.web_search_queries)
                     logger.info(f"–ù–∞–π–¥–µ–Ω—ã –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã ({len(search_suggestions)}) –¥–ª—è {chat_id}: {search_suggestions}")
            except (AttributeError, IndexError):
                 pass # –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π API –∏ –¥—Ä—É–≥–∏—Ö ---
    except ResourceExhausted as e_limit:
        logger.warning(f"–ò—Å—á–µ—Ä–ø–∞–Ω–∞ –∫–≤–æ—Ç–∞ API –¥–ª—è –º–æ–¥–µ–ª–∏ '{selected_alias}' (—á–∞—Ç {chat_id}): {e_limit}")
        error_message = f"üòî –£–ø—Å! –ü–æ—Ö–æ–∂–µ, –º–æ–¥–µ–ª—å '{selected_alias}' –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞ (–ø—Ä–µ–≤—ã—à–µ–Ω—ã –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ /model."
    except FailedPrecondition as e_precondition:
        # –ß–∞—Å—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
        logger.error(f"–û—à–∏–±–∫–∞ FailedPrecondition –¥–ª—è –º–æ–¥–µ–ª–∏ '{selected_alias}' (—á–∞—Ç {chat_id}): {e_precondition}. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞.")
        error_message = f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–∞—Ç–∞ —Å –º–æ–¥–µ–ª—å—é '{selected_alias}'. –ò—Å—Ç–æ—Ä–∏—è –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞, —á—Ç–æ–±—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å."
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        if chat_id in chat_histories:
            del chat_histories[chat_id]
            logger.info(f"–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ {chat_id} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞ –∏–∑-–∑–∞ FailedPrecondition.")
    except (GoogleAPIError, Exception) as e_other:
        # –õ–æ–≤–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ API –∏ –æ–±—â–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è Python
        logger.exception(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –º–æ–¥–µ–ª—å—é '{selected_alias}' –¥–ª—è —á–∞—Ç–∞ {chat_id}: {e_other}")
        error_message = f"üòµ –û–π! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ ({type(e_other).__name__}) –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ —Å –º–æ–¥–µ–ª—å—é '{selected_alias}'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç —Å–±—Ä–æ—Å–∏—Ç—å —á–∞—Ç (/start)."

    # --- –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
    reply_markup = None # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–µ–∑ –∫–Ω–æ–ø–æ–∫

    # --- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ ---
    if search_suggestions:
        keyboard = []
        # –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä–æ–º–æ–∂–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        for suggestion in search_suggestions[:3]:
             try:
                 # –ö–æ–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è URL
                 encoded_suggestion = urllib.parse.quote_plus(suggestion)
                 # –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ Google
                 search_url = f"https://www.google.com/search?q={encoded_suggestion}"
                 # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–æ–π
                 keyboard.append([InlineKeyboardButton(f"üîç {suggestion}", url=search_url)])
             except Exception as e_url:
                 logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è URL –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ '{suggestion}': {e_url}")
        if keyboard:
            reply_markup = InlineKeyboardMarkup(keyboard)
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å {len(keyboard)} –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è {chat_id}.")

    # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ ---
    if final_text:
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (Telegram –ª–∏–º–∏—Ç 4096)
        max_length = 4096
        bot_response = final_text

        if len(bot_response) > max_length:
             logger.warning(f"–û—Ç–≤–µ—Ç –¥–ª—è {chat_id} ('{selected_alias}') —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π ({len(bot_response)}), –æ–±—Ä–µ–∑–∞–µ–º –¥–æ {max_length}.")
             # –ü—Ä–æ—Å—Ç–æ –æ–±—Ä–µ–∑–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ
             bot_response = bot_response[:max_length - 3] + "..."
             # TODO: –ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —É–º–Ω—É—é —Ä–∞–∑–±–∏–≤–∫—É –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±—É–¥—É—â–µ–º

        try:
             await update.message.reply_text(
                 bot_response,
                 reply_to_message_id=message_id,
                 reply_markup=reply_markup # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
             )
             logger.info(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç ({len(bot_response)} —Å–∏–º–≤.) –¥–ª—è {chat_id}.")
        except Exception as e_send:
             logger.exception(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ Telegram –¥–ª—è {chat_id}: {e_send}")
             try:
                 # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                 await update.message.reply_text(
                      "–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∞–ª —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å Telegram. ü§î",
                      reply_to_message_id=message_id
                 )
             except Exception:
                 logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è {chat_id}.")

    # --- –ï—Å–ª–∏ –±—ã–ª —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (–∏–∑ –±–ª–æ–∫–∞ try/except –∏–ª–∏ –∏–∑ extract_response_text) ---
    elif error_message:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è {chat_id}: {error_message}")
        try:
            await update.message.reply_text(
                error_message,
                reply_to_message_id=message_id
                # –ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –æ–± –æ—à–∏–±–∫–µ
            )
        except Exception as e_send_err:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ Telegram –¥–ª—è {chat_id}: {e_send_err}")

    # --- –ï—Å–ª–∏ –Ω–µ –±—ã–ª–æ –Ω–∏ —Ç–µ–∫—Å—Ç–∞, –Ω–∏ –æ—à–∏–±–∫–∏ (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ) ---
    else:
        logger.warning(f"–ù–µ—Ç –Ω–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –Ω–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è {chat_id} ('{selected_alias}'). –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.")
        try:
            await update.message.reply_text(
                "–ß—Ç–æ-—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ. –Ø –Ω–µ –ø–æ–ª—É—á–∏–ª –Ω–∏ –æ—Ç–≤–µ—Ç–∞, –Ω–∏ –æ—à–∏–±–∫–∏ –æ—Ç –º–æ–¥–µ–ª–∏. ü§∑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–∑–∂–µ.",
                reply_to_message_id=message_id
            )
        except Exception as e_send_fallback:
             logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç '–Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' –¥–ª—è {chat_id}: {e_send_fallback}")


# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
def main() -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not LOADED_MODELS_ANY:
        logger.critical("–ó–ê–ü–£–°–ö –ù–ï–í–û–ó–ú–û–ñ–ï–ù: –ù–∏ –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å –Ω–µ –±—ã–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –Ω–∞ –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.")
        return # –í—ã—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –Ω–µ—Ç –º–æ–¥–µ–ª–µ–π

    if not TELEGRAM_BOT_TOKEN:
        logger.critical("–ó–ê–ü–£–°–ö –ù–ï–í–û–ó–ú–û–ñ–ï–ù: –¢–æ–∫–µ–Ω Telegram (TELEGRAM_BOT_TOKEN) –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    if not GOOGLE_API_KEY:
         logger.critical("–ó–ê–ü–£–°–ö –ù–ï–í–û–ó–ú–û–ñ–ï–ù: –ö–ª—é—á Google API (GOOGLE_API_KEY) –Ω–µ –Ω–∞–π–¥–µ–Ω.")
         return

    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–∏—Å–∫–∞ (–≥–ª–æ–±–∞–ª—å–Ω–æ)
    if not google_search_tool:
        logger.warning(f"–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ Google –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø. –ú–æ–¥–µ–ª–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–µ–∂–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Å–µ—Ç–∏.")
    else:
        logger.info(f"–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ Google –≥–ª–æ–±–∞–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω–∞–π–¥–µ–Ω —Ç–∏–ø: {search_tool_type_used}). –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç.")

    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram...")
    try:
        # –°–æ–∑–¥–∞–µ–º –±–∏–ª–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        application_builder = Application.builder().token(TELEGRAM_BOT_TOKEN)

        # –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É–ª–∏–Ω–≥–∞ –∑–¥–µ—Å—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        # application_builder.read_timeout(30).get_updates_read_timeout(30)

        # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = application_builder.build()

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("model", select_model_command))

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Ñ–∏–ª—å—Ç—Ä—É—è –∫–æ–º–∞–Ω–¥—ã)
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ (–≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏)
        application.add_handler(CallbackQueryHandler(select_model_callback))

        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling...")
        # allowed_updates=Update.ALL_TYPES - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        # drop_pending_updates=True - –ø–æ–ª–µ–∑–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ö, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–ª –Ω–∞ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤–æ –≤—Ä–µ–º—è –æ—Ñ—Ñ–ª–∞–π–Ω–∞
        application.run_polling(allowed_updates=Update.ALL_TYPES, drop_pending_updates=True)

    except Exception as e:
        # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–ø—É—Å–∫–∞ Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        logger.exception("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–ø—É—Å–∫–µ Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!")

if __name__ == '__main__':
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–ª–æ–≤–∞—Ä—å –º–æ–¥–µ–ª–µ–π –±—ã–ª —Å–æ–∑–¥–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —á—Ç–æ-—Ç–æ, –ø—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å main
    # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø—É—Å–∫ main(), –µ—Å–ª–∏ –±—ã–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –î–û –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π
    if 'LOADED_MODELS_ANY' in locals() and isinstance(LOADED_MODELS_ANY, dict) and LOADED_MODELS_ANY:
         logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ ({', '.join(LOADED_MODELS_ANY.keys())}). –ó–∞–ø—É—Å–∫–∞–µ–º main().")
         main()
    else:
         # –ï—Å–ª–∏ LOADED_MODELS_ANY –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤—ã—à–µ), –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º main
         logger.critical("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –Ω–µ —É–¥–∞–ª–∞—Å—å –∏–ª–∏ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.")

# --- END OF REALLY x15 FULL CORRECTED main.py (NO IMAGEN) ---
